knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
object1 <- read.csv("./China_EO_49to17.csv")
object2 = as_tibble(object1)
# Step 14
# ARranging the list by year, descending
object2 <- arrange(object2, desc(Year)) %>% as_tibble
object2
# Creating a new object which only has the data for Shanghai and Beijing from 2000-2017
object3 <- select(object2, starts_with("beijing"), starts_with("shanghai"), Year) %>% filter(Year >= 2000)
# Adding a column to new tibble that is the ratio of Beijing's Output to Shanghai
finalGraph <- mutate(object3, Output_Ratio = Beijing_Output / Shanghai_Output)
finalGraph
# Step 15: Create a function that
getRecentData <- function(province1, province2) {
dataset = object1
newTable <- select(dataset, starts_with(province1), starts_with(province2), Year) %>% filter(Year >= 2000)
if(ncol(newTable) == 3) {
newTable$Input_Output <- newTable[,1] / newTable[,3]
} else {
newTable <- mutate(newTable, Input_Output = "Insufficient data to compute")
}
return(as_tibble(newTable))
}
coolStuff <- getRecentData("Shanghai","Tianjin")
coolStuff
library("tidyverse")
object1 <- read.csv("./China_EO_49to17.csv")
object2 = as_tibble(object1)
# Step 14
# ARranging the list by year, descending
object2 <- arrange(object2, desc(Year)) %>% as_tibble
object2
# Creating a new object which only has the data for Shanghai and Beijing from 2000-2017
object3 <- select(object2, starts_with("beijing"), starts_with("shanghai"), Year) %>% filter(Year >= 2000)
# Adding a column to new tibble that is the ratio of Beijing's Output to Shanghai
finalGraph <- mutate(object3, Output_Ratio = Beijing_Output / Shanghai_Output)
finalGraph
# Step 15: Create a function that
getRecentData <- function(province1, province2) {
dataset = object1
newTable <- select(dataset, starts_with(province1), starts_with(province2), Year) %>% filter(Year >= 2000)
if(ncol(newTable) == 5) {
newTable$Input_Output <- newTable[,1] / newTable[,3]
} else {
newTable <- mutate(newTable, Input_Output = "Insufficient data to compute")
}
return(as_tibble(newTable))
}
coolStuff <- getRecentData("Shanghai","Tianjin")
coolStuff
library("tidyverse")
object1 <- read.csv("./China_EO_49to17.csv")
object2 = as_tibble(object1)
# Step 14
# ARranging the list by year, descending
object2 <- arrange(object2, desc(Year)) %>% as_tibble
object2
# Creating a new object which only has the data for Shanghai and Beijing from 2000-2017
object3 <- select(object2, starts_with("beijing"), starts_with("shanghai"), Year) %>% filter(Year >= 2000)
# Adding a column to new tibble that is the ratio of Beijing's Output to Shanghai
finalGraph <- mutate(object3, Output_Ratio = Beijing_Output / Shanghai_Output)
finalGraph
# Step 15: Create a function that
getRecentData <- function(province1, province2) {
dataset = object1
newTable <- select(dataset, starts_with(province1), starts_with(province2), Year) %>% filter(Year >= 2000)
if(ncol(newTable) == 5) {
newTable$Input_Output <- newTable[,2] / newTable[,4]
} else {
newTable <- mutate(newTable, Input_Output = "Insufficient data to compute")
}
return(as_tibble(newTable))
}
coolStuff <- getRecentData("Shanghai","Tianjin")
coolStuff
setwd("//netid.washington.edu/csde/other/desktop/justinch/Desktop/GEOG458/Group-Lab-1")
China_EO_49to17 <- read.csv("//netid.washington.edu/csde/other/desktop/justinch/Desktop/GEOG458/Group-Lab-1/China_EO_49to17.csv")
View(China_EO_49to17)
